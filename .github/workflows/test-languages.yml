name: PHPUnit Tests (Languages)

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

env:
  DB_NAME: facturascripts_test
  DB_USER: root
  DB_PASS: root
  DB_HOST: 127.0.0.1

jobs:
  test-languages:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version: ['8.3']
        database:
          - type: mysql
            version: '8.0'
            port: 3306
        lang: ['es_ES', 'en_EN', 'fr_FR', 'de_DE', 'it_IT', 'pt_PT', 'pt_BR', 'ca_ES', 'gl_ES']
      fail-fast: false

    name: PHP ${{ matrix.php-version }} - MySQL ${{ matrix.database.version }} - Lang ${{ matrix.lang }}

    services:
      mysql:
        image: ${{ matrix.database.type == 'mysql' && format('mysql:{0}', matrix.database.version) || '' }}
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: facturascripts_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: bcmath, curl, gd, iconv, mysqli, pdo_mysql, pdo_pgsql, pgsql, soap, zip, fileinfo, openssl, simplexml, mbstring, intl
          coverage: none
          tools: composer:v2
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --optimize-autoloader

      - name: Verify database connection
        run: |
          echo "Testing ${{ matrix.database.type }} ${{ matrix.database.version }} connection..."
          mysql --host=${{ env.DB_HOST }} --user=${{ env.DB_USER }} --password=${{ env.DB_PASS }} -e "SHOW DATABASES;"
          mysql --host=${{ env.DB_HOST }} --user=${{ env.DB_USER }} --password=${{ env.DB_PASS }} -e "SELECT VERSION();"

      - name: Create application config (lang=${{ matrix.lang }})
        run: |
          cat > config.php << 'EOF'
          <?php
          define('FS_COOKIES_EXPIRE', 31536000);
          define('FS_ROUTE', '');
          define('FS_DB_TYPE', 'mysql');
          define('FS_DB_HOST', '${{ env.DB_HOST }}');
          define('FS_DB_PORT', 3306);
          define('FS_DB_NAME', '${{ env.DB_NAME }}');
          define('FS_DB_USER', '${{ env.DB_USER }}');
          define('FS_DB_PASS', '${{ env.DB_PASS }}');
          define('FS_DB_FOREIGN_KEYS', true);
          define('FS_DB_TYPE_CHECK', true);
          define('FS_MYSQL_CHARSET', 'utf8mb4');
          define('FS_MYSQL_COLLATE', 'utf8mb4_unicode_520_ci');
          define('FS_LANG', '${{ matrix.lang }}');
          define('FS_TIMEZONE', 'Europe/Madrid');
          define('FS_HIDDEN_PLUGINS', '');
          define('FS_DEBUG', true);
          define('FS_DISABLE_ADD_PLUGINS', false);
          define('FS_DISABLE_RM_PLUGINS', false);
          EOF

      - name: Run PHPUnit tests
        run: |
          if [ -f phpunit.xml ] || [ -f phpunit.xml.dist ]; then
            vendor/bin/phpunit
          else
            echo "No PHPUnit configuration found. Running with default settings..."
            vendor/bin/phpunit --bootstrap vendor/autoload.php tests/
          fi

